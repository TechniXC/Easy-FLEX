<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CaptiveLabel" xml:space="preserve">
    <value>If there is no one, we send you to the next step.</value>
  </data>
  <data name="CaptiveLabelBar" xml:space="preserve">
    <value>Additional Provider authorization</value>
  </data>
  <data name="CaptiveLabelHeader" xml:space="preserve">
    <value>Authorization portal searching...</value>
  </data>
  <data name="CaptiveTab" xml:space="preserve">
    <value>Step 3/5</value>
  </data>
  <data name="CloseButton" xml:space="preserve">
    <value>close</value>
  </data>
  <data name="ConnectedLabel" xml:space="preserve">
    <value>Everything is ready to start work. 

This window can be closed by pressing button below or it will close automatically in 20 seconds.</value>
  </data>
  <data name="ConnectedLabelBar" xml:space="preserve">
    <value>Connection Established.</value>
  </data>
  <data name="ConnectedLabelHeader" xml:space="preserve">
    <value>Connection Established.</value>
  </data>
  <data name="ConnectedTab" xml:space="preserve">
    <value>Step 5/5</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Easy_FLEX" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\Easy_FLEX.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GreetingLabel" xml:space="preserve">
    <value>This tool will help you to establish a connection to Societe Generale RUSSIA internal network.

Press the button below to start.</value>
  </data>
  <data name="GreetingLabelBar" xml:space="preserve">
    <value>Welcome Onboard!</value>
  </data>
  <data name="GreetingLabelHeader" xml:space="preserve">
    <value>Welcome to 
Easy FLEX!</value>
  </data>
  <data name="GreetingTab" xml:space="preserve">
    <value>Step 1/5</value>
  </data>
  <data name="GTS_Logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\GTS_Logo.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="NoCPSoft" xml:space="preserve">
    <value>There are no CheckPoint VPN Software on your PC. 
Please ask your technical support for sulution. 
Tool will be closed...</value>
  </data>
  <data name="NtwTrouble" xml:space="preserve">
    <value>There are troubles with Network connection. 
We have to start again. 
Sorry...</value>
  </data>
  <data name="RepeatVPNButton" xml:space="preserve">
    <value>repeat guide</value>
  </data>
  <data name="RepeatWifiButton" xml:space="preserve">
    <value>repeat guide</value>
  </data>
  <data name="RestartVPNButton" xml:space="preserve">
    <value>     restart vpn
(in case of trouble)</value>
  </data>
  <data name="StartButton" xml:space="preserve">
    <value>let's start</value>
  </data>
  <data name="VPNLabel" xml:space="preserve">
    <value>Now your Laptop is connected to Wi-Fi with internet. Please log in with Check Point interface using your  account and SafeNet MobilePass according to the video guide.
 
Check Point UI will appear in a moment.</value>
  </data>
  <data name="VPNLabelBar" xml:space="preserve">
    <value>Establishing encrypted VPN tunnel</value>
  </data>
  <data name="VPNLabelHeader" xml:space="preserve">
    <value>Establishing encrypted VPN tunnel</value>
  </data>
  <data name="VPNTab" xml:space="preserve">
    <value>Step 4/5</value>
  </data>
  <data name="WiFiLabel" xml:space="preserve">
    <value>Your Laptop is not connected to any Network.. Please connect to Wi-Fi to get Internet access according to the video Guide. 

It is important to establish VPN.</value>
  </data>
  <data name="WiFiLabelBar" xml:space="preserve">
    <value>Checking Network Connection</value>
  </data>
  <data name="WiFiLabelHeader" xml:space="preserve">
    <value>Checking Wi-Fi Connection</value>
  </data>
  <data name="WiFiTab" xml:space="preserve">
    <value>Step 2/5</value>
  </data>
</root>